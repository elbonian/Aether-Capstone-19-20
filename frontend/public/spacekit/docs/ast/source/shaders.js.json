{
  "type": "File",
  "start": 0,
  "end": 10574,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 382,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 10574,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 382,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 31,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 31
          }
        },
        "specifiers": [
          {
            "type": "ImportNamespaceSpecifier",
            "start": 7,
            "end": 17,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 17
              }
            },
            "local": {
              "type": "Identifier",
              "start": 12,
              "end": 17,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 12
                },
                "end": {
                  "line": 1,
                  "column": 17
                },
                "identifierName": "THREE"
              },
              "name": "THREE"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 23,
          "end": 30,
          "loc": {
            "start": {
              "line": 1,
              "column": 23
            },
            "end": {
              "line": 1,
              "column": 30
            }
          },
          "extra": {
            "rawValue": "three",
            "raw": "'three'"
          },
          "value": "three"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 33,
        "end": 74,
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 41
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 42,
            "end": 56,
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 23
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 42,
              "end": 56,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 23
                },
                "identifierName": "getScaleFactor"
              },
              "name": "getScaleFactor"
            },
            "local": {
              "type": "Identifier",
              "start": 42,
              "end": 56,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 23
                },
                "identifierName": "getScaleFactor"
              },
              "name": "getScaleFactor"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 64,
          "end": 73,
          "loc": {
            "start": {
              "line": 3,
              "column": 31
            },
            "end": {
              "line": 3,
              "column": 40
            }
          },
          "extra": {
            "rawValue": "./Scale",
            "raw": "'./Scale'"
          },
          "value": "./Scale"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 76,
            "end": 94,
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 95,
        "end": 312,
        "loc": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 102,
          "end": 312,
          "loc": {
            "start": {
              "line": 8,
              "column": 7
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 111,
            "end": 133,
            "loc": {
              "start": {
                "line": 8,
                "column": 16
              },
              "end": {
                "line": 8,
                "column": 38
              },
              "identifierName": "getOrbitShaderFragment"
            },
            "name": "getOrbitShaderFragment",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 136,
            "end": 312,
            "loc": {
              "start": {
                "line": 8,
                "column": 41
              },
              "end": {
                "line": 17,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 140,
                "end": 310,
                "loc": {
                  "start": {
                    "line": 9,
                    "column": 2
                  },
                  "end": {
                    "line": 16,
                    "column": 4
                  }
                },
                "argument": {
                  "type": "TemplateLiteral",
                  "start": 147,
                  "end": 309,
                  "loc": {
                    "start": {
                      "line": 9,
                      "column": 9
                    },
                    "end": {
                      "line": 16,
                      "column": 3
                    }
                  },
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 148,
                      "end": 308,
                      "loc": {
                        "start": {
                          "line": 9,
                          "column": 10
                        },
                        "end": {
                          "line": 16,
                          "column": 2
                        }
                      },
                      "value": {
                        "raw": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  ",
                        "cooked": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  "
                      },
                      "tail": true
                    }
                  ]
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 76,
              "end": 94,
              "loc": {
                "start": {
                  "line": 5,
                  "column": 0
                },
                "end": {
                  "line": 7,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 314,
              "end": 332,
              "loc": {
                "start": {
                  "line": 19,
                  "column": 0
                },
                "end": {
                  "line": 21,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 76,
            "end": 94,
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 314,
            "end": 332,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 333,
        "end": 5018,
        "loc": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 181,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 340,
          "end": 5018,
          "loc": {
            "start": {
              "line": 22,
              "column": 7
            },
            "end": {
              "line": 181,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 349,
            "end": 369,
            "loc": {
              "start": {
                "line": 22,
                "column": 16
              },
              "end": {
                "line": 22,
                "column": 36
              },
              "identifierName": "getOrbitShaderVertex"
            },
            "name": "getOrbitShaderVertex",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 372,
            "end": 5018,
            "loc": {
              "start": {
                "line": 22,
                "column": 39
              },
              "end": {
                "line": 181,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 376,
                "end": 5016,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 2
                  },
                  "end": {
                    "line": 180,
                    "column": 4
                  }
                },
                "argument": {
                  "type": "TemplateLiteral",
                  "start": 383,
                  "end": 5015,
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 9
                    },
                    "end": {
                      "line": 180,
                      "column": 3
                    }
                  },
                  "expressions": [
                    {
                      "type": "CallExpression",
                      "start": 2969,
                      "end": 3013,
                      "loc": {
                        "start": {
                          "line": 113,
                          "column": 18
                        },
                        "end": {
                          "line": 115,
                          "column": 7
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 2969,
                        "end": 2993,
                        "loc": {
                          "start": {
                            "line": 113,
                            "column": 18
                          },
                          "end": {
                            "line": 113,
                            "column": 42
                          }
                        },
                        "object": {
                          "type": "CallExpression",
                          "start": 2969,
                          "end": 2985,
                          "loc": {
                            "start": {
                              "line": 113,
                              "column": 18
                            },
                            "end": {
                              "line": 113,
                              "column": 34
                            }
                          },
                          "callee": {
                            "type": "Identifier",
                            "start": 2969,
                            "end": 2983,
                            "loc": {
                              "start": {
                                "line": 113,
                                "column": 18
                              },
                              "end": {
                                "line": 113,
                                "column": 32
                              },
                              "identifierName": "getScaleFactor"
                            },
                            "name": "getScaleFactor"
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2986,
                          "end": 2993,
                          "loc": {
                            "start": {
                              "line": 113,
                              "column": 35
                            },
                            "end": {
                              "line": 113,
                              "column": 42
                            },
                            "identifierName": "toFixed"
                          },
                          "name": "toFixed"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "NumericLiteral",
                          "start": 3003,
                          "end": 3004,
                          "loc": {
                            "start": {
                              "line": 114,
                              "column": 8
                            },
                            "end": {
                              "line": 114,
                              "column": 9
                            }
                          },
                          "extra": {
                            "rawValue": 1,
                            "raw": "1"
                          },
                          "value": 1
                        }
                      ]
                    },
                    {
                      "type": "CallExpression",
                      "start": 4142,
                      "end": 4186,
                      "loc": {
                        "start": {
                          "line": 152,
                          "column": 18
                        },
                        "end": {
                          "line": 154,
                          "column": 7
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 4142,
                        "end": 4166,
                        "loc": {
                          "start": {
                            "line": 152,
                            "column": 18
                          },
                          "end": {
                            "line": 152,
                            "column": 42
                          }
                        },
                        "object": {
                          "type": "CallExpression",
                          "start": 4142,
                          "end": 4158,
                          "loc": {
                            "start": {
                              "line": 152,
                              "column": 18
                            },
                            "end": {
                              "line": 152,
                              "column": 34
                            }
                          },
                          "callee": {
                            "type": "Identifier",
                            "start": 4142,
                            "end": 4156,
                            "loc": {
                              "start": {
                                "line": 152,
                                "column": 18
                              },
                              "end": {
                                "line": 152,
                                "column": 32
                              },
                              "identifierName": "getScaleFactor"
                            },
                            "name": "getScaleFactor"
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 4159,
                          "end": 4166,
                          "loc": {
                            "start": {
                              "line": 152,
                              "column": 35
                            },
                            "end": {
                              "line": 152,
                              "column": 42
                            },
                            "identifierName": "toFixed"
                          },
                          "name": "toFixed"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "NumericLiteral",
                          "start": 4176,
                          "end": 4177,
                          "loc": {
                            "start": {
                              "line": 153,
                              "column": 8
                            },
                            "end": {
                              "line": 153,
                              "column": 9
                            }
                          },
                          "extra": {
                            "rawValue": 1,
                            "raw": "1"
                          },
                          "value": 1
                        }
                      ]
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 384,
                      "end": 2967,
                      "loc": {
                        "start": {
                          "line": 23,
                          "column": 10
                        },
                        "end": {
                          "line": 113,
                          "column": 16
                        }
                      },
                      "value": {
                        "raw": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float wBar;\n    attribute float M;\n\n    // Perihelion distance\n    attribute float q;\n\n    // CPU-computed term for parabolic orbits\n    attribute float a0;\n\n    // COSH Function (Hyperbolic Cosine)\n    float cosh(float val) {\n      float tmp = exp(val);\n      float cosH = (tmp + 1.0 / tmp) / 2.0;\n      return cosH;\n    }\n\n    // TANH Function (Hyperbolic Tangent)\n    float tanh(float val) {\n      float tmp = exp(val);\n      float tanH = (tmp - 1.0 / tmp) / (tmp + 1.0 / tmp);\n      return tanH;\n    }\n\n    // SINH Function (Hyperbolic Sine)\n    float sinh(float val) {\n      float tmp = exp(val);\n      float sinH = (tmp - 1.0 / tmp) / 2.0;\n      return sinH;\n    }\n\n    // Cube root helper that assumes param is positive\n    float cbrt(float x) {\n      return exp(log(x) / 3.0);\n    }\n\n    vec3 getPosNearParabolic() {\n      // See https://stjarnhimlen.se/comp/ppcomp.html#17\n      float b = sqrt(1.0 + a0 * a0);\n      float W = cbrt(b + a0) - cbrt(b - a0);\n      float f = (1.0 - e) / (1.0 + e);\n\n      float a1 = 2.0 / 3.0 + (2.0 / 5.0) * W * W;\n      float a2 = 7.0 / 5.0 + (33.0 / 35.0) * W * W + (37.0 / 175.0) * pow(W, 4.0);\n      float a3 =\n        W * W * (432.0 / 175.0 + (956.0 / 1125.0) * W * W + (84.0 / 1575.0) * pow(W, 4.0));\n\n      float C = (W * W) / (1.0 + W * W);\n      float g = f * C * C;\n      float w = W * (1.0 + f * C * (a1 + a2 * g + a3 * g * g));\n\n      // True anomaly\n      float v = 2.0 * atan(w);\n      // Heliocentric distance\n      float r = (q * (1.0 + w * w)) / (1.0 + w * w * f);\n\n      // Compute heliocentric coords.\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPosHyperbolic() {\n      float F0 = M;\n      for (int count = 0; count < 100; count++) {\n        float F1 = (M + e * (F0 * cosh(F0) - sinh(F0))) / (e * cosh(F0) - 1.0);\n        float lastdiff = abs(F1 - F0);\n        F0 = F1;\n\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n      float F = F0;\n\n      float v = 2.0 * atan(sqrt((e + 1.0) / (e - 1.0))) * tanh(F / 2.0);\n      float r = ",
                        "cooked": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float wBar;\n    attribute float M;\n\n    // Perihelion distance\n    attribute float q;\n\n    // CPU-computed term for parabolic orbits\n    attribute float a0;\n\n    // COSH Function (Hyperbolic Cosine)\n    float cosh(float val) {\n      float tmp = exp(val);\n      float cosH = (tmp + 1.0 / tmp) / 2.0;\n      return cosH;\n    }\n\n    // TANH Function (Hyperbolic Tangent)\n    float tanh(float val) {\n      float tmp = exp(val);\n      float tanH = (tmp - 1.0 / tmp) / (tmp + 1.0 / tmp);\n      return tanH;\n    }\n\n    // SINH Function (Hyperbolic Sine)\n    float sinh(float val) {\n      float tmp = exp(val);\n      float sinH = (tmp - 1.0 / tmp) / 2.0;\n      return sinH;\n    }\n\n    // Cube root helper that assumes param is positive\n    float cbrt(float x) {\n      return exp(log(x) / 3.0);\n    }\n\n    vec3 getPosNearParabolic() {\n      // See https://stjarnhimlen.se/comp/ppcomp.html#17\n      float b = sqrt(1.0 + a0 * a0);\n      float W = cbrt(b + a0) - cbrt(b - a0);\n      float f = (1.0 - e) / (1.0 + e);\n\n      float a1 = 2.0 / 3.0 + (2.0 / 5.0) * W * W;\n      float a2 = 7.0 / 5.0 + (33.0 / 35.0) * W * W + (37.0 / 175.0) * pow(W, 4.0);\n      float a3 =\n        W * W * (432.0 / 175.0 + (956.0 / 1125.0) * W * W + (84.0 / 1575.0) * pow(W, 4.0));\n\n      float C = (W * W) / (1.0 + W * W);\n      float g = f * C * C;\n      float w = W * (1.0 + f * C * (a1 + a2 * g + a3 * g * g));\n\n      // True anomaly\n      float v = 2.0 * atan(w);\n      // Heliocentric distance\n      float r = (q * (1.0 + w * w)) / (1.0 + w * w * f);\n\n      // Compute heliocentric coords.\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPosHyperbolic() {\n      float F0 = M;\n      for (int count = 0; count < 100; count++) {\n        float F1 = (M + e * (F0 * cosh(F0) - sinh(F0))) / (e * cosh(F0) - 1.0);\n        float lastdiff = abs(F1 - F0);\n        F0 = F1;\n\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n      float F = F0;\n\n      float v = 2.0 * atan(sqrt((e + 1.0) / (e - 1.0))) * tanh(F / 2.0);\n      float r = "
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 3014,
                      "end": 4140,
                      "loc": {
                        "start": {
                          "line": 115,
                          "column": 8
                        },
                        "end": {
                          "line": 152,
                          "column": 16
                        }
                      },
                      "value": {
                        "raw": " * (a * (1.0 - e * e)) / (1.0 + e * cos(v));\n\n      // Compute heliocentric coords.\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPosEllipsoid() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n\n      for (int count = 0; count < 100; count++) {\n        E1 = M + e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+e)/(1.0-e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = ",
                        "cooked": " * (a * (1.0 - e * e)) / (1.0 + e * cos(v));\n\n      // Compute heliocentric coords.\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPosEllipsoid() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n\n      for (int count = 0; count < 100; count++) {\n        E1 = M + e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+e)/(1.0-e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = "
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 4187,
                      "end": 5014,
                      "loc": {
                        "start": {
                          "line": 154,
                          "column": 8
                        },
                        "end": {
                          "line": 180,
                          "column": 2
                        }
                      },
                      "value": {
                        "raw": " * a * (1.0 - e * e) / (1.0 + e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPos() {\n      if (e > 0.8 && e < 1.2) {\n        return getPosNearParabolic();\n      } else if (e > 1.2) {\n        return getPosHyperbolic();\n      }\n      return getPosEllipsoid();\n    }\n\n    void main() {\n      vColor = fuzzColor;\n\n      vec3 newpos = getPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  ",
                        "cooked": " * a * (1.0 - e * e) / (1.0 + e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPos() {\n      if (e > 0.8 && e < 1.2) {\n        return getPosNearParabolic();\n      } else if (e > 1.2) {\n        return getPosHyperbolic();\n      }\n      return getPosEllipsoid();\n    }\n\n    void main() {\n      vColor = fuzzColor;\n\n      vec3 newpos = getPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  "
                      },
                      "tail": true
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 314,
              "end": 332,
              "loc": {
                "start": {
                  "line": 19,
                  "column": 0
                },
                "end": {
                  "line": 21,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 314,
            "end": 332,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5020,
        "end": 5216,
        "loc": {
          "start": {
            "line": 183,
            "column": 0
          },
          "end": {
            "line": 190,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5027,
          "end": 5216,
          "loc": {
            "start": {
              "line": 183,
              "column": 7
            },
            "end": {
              "line": 190,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5033,
              "end": 5215,
              "loc": {
                "start": {
                  "line": 183,
                  "column": 13
                },
                "end": {
                  "line": 190,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5033,
                "end": 5053,
                "loc": {
                  "start": {
                    "line": 183,
                    "column": 13
                  },
                  "end": {
                    "line": 183,
                    "column": 33
                  },
                  "identifierName": "STAR_SHADER_FRAGMENT"
                },
                "name": "STAR_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 5056,
                "end": 5215,
                "loc": {
                  "start": {
                    "line": 183,
                    "column": 36
                  },
                  "end": {
                    "line": 190,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 5057,
                    "end": 5214,
                    "loc": {
                      "start": {
                        "line": 183,
                        "column": 37
                      },
                      "end": {
                        "line": 190,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n",
                      "cooked": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5218,
        "end": 5503,
        "loc": {
          "start": {
            "line": 192,
            "column": 0
          },
          "end": {
            "line": 202,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5225,
          "end": 5503,
          "loc": {
            "start": {
              "line": 192,
              "column": 7
            },
            "end": {
              "line": 202,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5231,
              "end": 5502,
              "loc": {
                "start": {
                  "line": 192,
                  "column": 13
                },
                "end": {
                  "line": 202,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5231,
                "end": 5249,
                "loc": {
                  "start": {
                    "line": 192,
                    "column": 13
                  },
                  "end": {
                    "line": 192,
                    "column": 31
                  },
                  "identifierName": "STAR_SHADER_VERTEX"
                },
                "name": "STAR_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 5252,
                "end": 5502,
                "loc": {
                  "start": {
                    "line": 192,
                    "column": 34
                  },
                  "end": {
                    "line": 202,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 5253,
                    "end": 5501,
                    "loc": {
                      "start": {
                        "line": 192,
                        "column": 35
                      },
                      "end": {
                        "line": 202,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n",
                      "cooked": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5505,
        "end": 5857,
        "loc": {
          "start": {
            "line": 204,
            "column": 0
          },
          "end": {
            "line": 214,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5512,
          "end": 5857,
          "loc": {
            "start": {
              "line": 204,
              "column": 7
            },
            "end": {
              "line": 214,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5518,
              "end": 5856,
              "loc": {
                "start": {
                  "line": 204,
                  "column": 13
                },
                "end": {
                  "line": 214,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5518,
                "end": 5548,
                "loc": {
                  "start": {
                    "line": 204,
                    "column": 13
                  },
                  "end": {
                    "line": 204,
                    "column": 43
                  },
                  "identifierName": "GENERIC_PARTICLE_SHADER_VERTEX"
                },
                "name": "GENERIC_PARTICLE_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 5551,
                "end": 5856,
                "loc": {
                  "start": {
                    "line": 204,
                    "column": 46
                  },
                  "end": {
                    "line": 214,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 5552,
                    "end": 5855,
                    "loc": {
                      "start": {
                        "line": 204,
                        "column": 47
                      },
                      "end": {
                        "line": 214,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n",
                      "cooked": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5859,
        "end": 6181,
        "loc": {
          "start": {
            "line": 216,
            "column": 0
          },
          "end": {
            "line": 225,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5866,
          "end": 6181,
          "loc": {
            "start": {
              "line": 216,
              "column": 7
            },
            "end": {
              "line": 225,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5872,
              "end": 6180,
              "loc": {
                "start": {
                  "line": 216,
                  "column": 13
                },
                "end": {
                  "line": 225,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5872,
                "end": 5904,
                "loc": {
                  "start": {
                    "line": 216,
                    "column": 13
                  },
                  "end": {
                    "line": 216,
                    "column": 45
                  },
                  "identifierName": "GENERIC_PARTICLE_SHADER_FRAGMENT"
                },
                "name": "GENERIC_PARTICLE_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 5907,
                "end": 6180,
                "loc": {
                  "start": {
                    "line": 216,
                    "column": 48
                  },
                  "end": {
                    "line": 225,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 5908,
                    "end": 6179,
                    "loc": {
                      "start": {
                        "line": 216,
                        "column": 49
                      },
                      "end": {
                        "line": 225,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n",
                      "cooked": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6183,
        "end": 7023,
        "loc": {
          "start": {
            "line": 227,
            "column": 0
          },
          "end": {
            "line": 252,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 6190,
          "end": 7023,
          "loc": {
            "start": {
              "line": 227,
              "column": 7
            },
            "end": {
              "line": 252,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 6196,
              "end": 7022,
              "loc": {
                "start": {
                  "line": 227,
                  "column": 13
                },
                "end": {
                  "line": 252,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 6196,
                "end": 6220,
                "loc": {
                  "start": {
                    "line": 227,
                    "column": 13
                  },
                  "end": {
                    "line": 227,
                    "column": 37
                  },
                  "identifierName": "ATMOSPHERE_SHADER_VERTEX"
                },
                "name": "ATMOSPHERE_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 6223,
                "end": 7022,
                "loc": {
                  "start": {
                    "line": 227,
                    "column": 40
                  },
                  "end": {
                    "line": 252,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 6224,
                    "end": 7021,
                    "loc": {
                      "start": {
                        "line": 227,
                        "column": 41
                      },
                      "end": {
                        "line": 252,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  //varying vec3 vNormal;\n\n  varying vec3 vViewLightPos;\n\n  void main() {\n    //vNormal = normalize(normalMatrix * normal);\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n    vUv = uv;\n    // Since the light is in camera coordinates,\n    // I'll need the vertex position in camera coords too\n    vecPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    // That's NOT exacly how you should transform your\n    // normals but this will work fine, since my model\n    // matrix is pretty basic\n    vecNormal = (modelViewMatrix * vec4(normal, 0.0)).xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    gl_Position = projectionMatrix * vec4(vecPos, 1.0);\n  }\n",
                      "cooked": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  //varying vec3 vNormal;\n\n  varying vec3 vViewLightPos;\n\n  void main() {\n    //vNormal = normalize(normalMatrix * normal);\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n    vUv = uv;\n    // Since the light is in camera coordinates,\n    // I'll need the vertex position in camera coords too\n    vecPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    // That's NOT exacly how you should transform your\n    // normals but this will work fine, since my model\n    // matrix is pretty basic\n    vecNormal = (modelViewMatrix * vec4(normal, 0.0)).xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    gl_Position = projectionMatrix * vec4(vecPos, 1.0);\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "trailingComments": [
            {
              "type": "CommentLine",
              "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
              "start": 7025,
              "end": 7144,
              "loc": {
                "start": {
                  "line": 254,
                  "column": 0
                },
                "end": {
                  "line": 254,
                  "column": 119
                }
              }
            }
          ],
          "leadingComments": []
        },
        "trailingComments": [
          {
            "type": "CommentLine",
            "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
            "start": 7025,
            "end": 7144,
            "loc": {
              "start": {
                "line": 254,
                "column": 0
              },
              "end": {
                "line": 254,
                "column": 119
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 7145,
        "end": 7786,
        "loc": {
          "start": {
            "line": 255,
            "column": 0
          },
          "end": {
            "line": 276,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 7152,
          "end": 7786,
          "loc": {
            "start": {
              "line": 255,
              "column": 7
            },
            "end": {
              "line": 276,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 7158,
              "end": 7785,
              "loc": {
                "start": {
                  "line": 255,
                  "column": 13
                },
                "end": {
                  "line": 276,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 7158,
                "end": 7184,
                "loc": {
                  "start": {
                    "line": 255,
                    "column": 13
                  },
                  "end": {
                    "line": 255,
                    "column": 39
                  },
                  "identifierName": "ATMOSPHERE_SHADER_FRAGMENT"
                },
                "name": "ATMOSPHERE_SHADER_FRAGMENT",
                "leadingComments": null
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 7187,
                "end": 7785,
                "loc": {
                  "start": {
                    "line": 255,
                    "column": 42
                  },
                  "end": {
                    "line": 276,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 7188,
                    "end": 7784,
                    "loc": {
                      "start": {
                        "line": 255,
                        "column": 43
                      },
                      "end": {
                        "line": 276,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform float c;\n  uniform float p;\n  uniform vec3 color;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  varying vec3  vViewLightPos;\n\n  void main() {\n    float intensity = pow(c - dot(vecNormal, vec3(0.0, 0.0, 1.0)), p);\n\n    vec4 addedLights = vec4(0.0, 0.0, 0.0, 1.0);\n    vec3 lightDirection = normalize(vecPos - vViewLightPos);\n    addedLights.rgb += clamp(dot(-lightDirection, vecNormal), 0.0, 1.0)\n                       * 1.0 /* intensity */;\n                       // * pointLights[i].color\n\n    gl_FragColor = vec4(color, 1.0) * intensity * addedLights;\n  }\n",
                      "cooked": "\n  uniform float c;\n  uniform float p;\n  uniform vec3 color;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  varying vec3  vViewLightPos;\n\n  void main() {\n    float intensity = pow(c - dot(vecNormal, vec3(0.0, 0.0, 1.0)), p);\n\n    vec4 addedLights = vec4(0.0, 0.0, 0.0, 1.0);\n    vec3 lightDirection = normalize(vecPos - vViewLightPos);\n    addedLights.rgb += clamp(dot(-lightDirection, vecNormal), 0.0, 1.0)\n                       * 1.0 /* intensity */;\n                       // * pointLights[i].color\n\n    gl_FragColor = vec4(color, 1.0) * intensity * addedLights;\n  }\n"
                    },
                    "tail": true
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentLine",
              "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
              "start": 7025,
              "end": 7144,
              "loc": {
                "start": {
                  "line": 254,
                  "column": 0
                },
                "end": {
                  "line": 254,
                  "column": 119
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentLine",
            "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
            "start": 7025,
            "end": 7144,
            "loc": {
              "start": {
                "line": 254,
                "column": 0
              },
              "end": {
                "line": 254,
                "column": 119
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 7788,
        "end": 8249,
        "loc": {
          "start": {
            "line": 278,
            "column": 0
          },
          "end": {
            "line": 295,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 7795,
          "end": 8249,
          "loc": {
            "start": {
              "line": 278,
              "column": 7
            },
            "end": {
              "line": 295,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 7801,
              "end": 8248,
              "loc": {
                "start": {
                  "line": 278,
                  "column": 13
                },
                "end": {
                  "line": 295,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 7801,
                "end": 7821,
                "loc": {
                  "start": {
                    "line": 278,
                    "column": 13
                  },
                  "end": {
                    "line": 278,
                    "column": 33
                  },
                  "identifierName": "SPHERE_SHADER_VERTEX"
                },
                "name": "SPHERE_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 7824,
                "end": 8248,
                "loc": {
                  "start": {
                    "line": 278,
                    "column": 36
                  },
                  "end": {
                    "line": 295,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 7825,
                    "end": 8247,
                    "loc": {
                      "start": {
                        "line": 278,
                        "column": 37
                      },
                      "end": {
                        "line": 295,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n  varying vec3 vNormal;\n\n  void main() {\n    vUv = uv;\n    vec4 vViewPosition4 = modelViewMatrix * vec4(position, 1.0);\n    vViewPosition = vViewPosition4.xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    vNormal = normalMatrix * normal;\n\n    gl_Position = projectionMatrix * vViewPosition4;\n  }\n",
                      "cooked": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n  varying vec3 vNormal;\n\n  void main() {\n    vUv = uv;\n    vec4 vViewPosition4 = modelViewMatrix * vec4(position, 1.0);\n    vViewPosition = vViewPosition4.xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    vNormal = normalMatrix * normal;\n\n    gl_Position = projectionMatrix * vViewPosition4;\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 8251,
        "end": 8696,
        "loc": {
          "start": {
            "line": 297,
            "column": 0
          },
          "end": {
            "line": 311,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 8258,
          "end": 8696,
          "loc": {
            "start": {
              "line": 297,
              "column": 7
            },
            "end": {
              "line": 311,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 8264,
              "end": 8695,
              "loc": {
                "start": {
                  "line": 297,
                  "column": 13
                },
                "end": {
                  "line": 311,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 8264,
                "end": 8286,
                "loc": {
                  "start": {
                    "line": 297,
                    "column": 13
                  },
                  "end": {
                    "line": 297,
                    "column": 35
                  },
                  "identifierName": "SPHERE_SHADER_FRAGMENT"
                },
                "name": "SPHERE_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 8289,
                "end": 8695,
                "loc": {
                  "start": {
                    "line": 297,
                    "column": 38
                  },
                  "end": {
                    "line": 311,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 8290,
                    "end": 8694,
                    "loc": {
                      "start": {
                        "line": 297,
                        "column": 39
                      },
                      "end": {
                        "line": 311,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform sampler2D sphereTexture;\n\n  varying vec2 vUv;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n\n  void main() {\n    vec3 normal = normalize(vNormal);\n    vec3 lightDir = normalize(vViewLightPos - vViewPosition);\n    float lambertian = max(dot(normal, lightDir), 0.0);\n    gl_FragColor = texture2D(sphereTexture, vUv) * vec4(vec3(1.0) * lambertian, 1.0);\n  }\n",
                      "cooked": "\n  uniform sampler2D sphereTexture;\n\n  varying vec2 vUv;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n\n  void main() {\n    vec3 normal = normalize(vNormal);\n    vec3 lightDir = normalize(vViewLightPos - vViewPosition);\n    float lambertian = max(dot(normal, lightDir), 0.0);\n    gl_FragColor = texture2D(sphereTexture, vUv) * vec4(vec3(1.0) * lambertian, 1.0);\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 8698,
        "end": 9072,
        "loc": {
          "start": {
            "line": 313,
            "column": 0
          },
          "end": {
            "line": 326,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 8705,
          "end": 9072,
          "loc": {
            "start": {
              "line": 313,
              "column": 7
            },
            "end": {
              "line": 326,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 8711,
              "end": 9071,
              "loc": {
                "start": {
                  "line": 313,
                  "column": 13
                },
                "end": {
                  "line": 326,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 8711,
                "end": 8729,
                "loc": {
                  "start": {
                    "line": 313,
                    "column": 13
                  },
                  "end": {
                    "line": 313,
                    "column": 31
                  },
                  "identifierName": "RING_SHADER_VERTEX"
                },
                "name": "RING_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 8732,
                "end": 9071,
                "loc": {
                  "start": {
                    "line": 313,
                    "column": 34
                  },
                  "end": {
                    "line": 326,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 8733,
                    "end": 9070,
                    "loc": {
                      "start": {
                        "line": 313,
                        "column": 35
                      },
                      "end": {
                        "line": 326,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n\n  void main() {\n    vPos = position;\n    vec4 worldPosition = (modelMatrix * vec4(position, 1.));\n    gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition.xyz, 1.);\n\n    vNormal = normalMatrix * normal;\n    vWorldPosition = worldPosition.xyz;\n  }\n",
                      "cooked": "\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n\n  void main() {\n    vPos = position;\n    vec4 worldPosition = (modelMatrix * vec4(position, 1.));\n    gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition.xyz, 1.);\n\n    vNormal = normalMatrix * normal;\n    vWorldPosition = worldPosition.xyz;\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 9074,
        "end": 10573,
        "loc": {
          "start": {
            "line": 328,
            "column": 0
          },
          "end": {
            "line": 381,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 9081,
          "end": 10573,
          "loc": {
            "start": {
              "line": 328,
              "column": 7
            },
            "end": {
              "line": 381,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 9087,
              "end": 10572,
              "loc": {
                "start": {
                  "line": 328,
                  "column": 13
                },
                "end": {
                  "line": 381,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 9087,
                "end": 9107,
                "loc": {
                  "start": {
                    "line": 328,
                    "column": 13
                  },
                  "end": {
                    "line": 328,
                    "column": 33
                  },
                  "identifierName": "RING_SHADER_FRAGMENT"
                },
                "name": "RING_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 9110,
                "end": 10572,
                "loc": {
                  "start": {
                    "line": 328,
                    "column": 36
                  },
                  "end": {
                    "line": 381,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 9111,
                    "end": 10571,
                    "loc": {
                      "start": {
                        "line": 328,
                        "column": 37
                      },
                      "end": {
                        "line": 381,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform sampler2D ringTexture;\n  uniform float innerRadius;\n  uniform float outerRadius;\n  uniform vec3 lightPos;\n\n  varying vec3 vNormal;\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n\n  vec4 color() {\n    vec2 uv = vec2(0);\n    uv.x = (length(vPos) - innerRadius) / (outerRadius - innerRadius);\n    if (uv.x < 0.0 || uv.x > 1.0) {\n      discard;\n    }\n\n    vec4 pixel = texture2D(ringTexture, uv);\n    return pixel;\n  }\n\n  vec3 shadow() {\n    vec3 lightDir = normalize(vPos - lightPos);\n    vec3 planetPos = vec3(0);\n\n    vec3 ringPos = vPos - planetPos;\n    float posDotLightDir = dot(ringPos, lightDir);\n    float posDotLightDir2 = posDotLightDir * posDotLightDir;\n\n    // TODO(ian): Generalize this line.\n    float radius = 0.0389259903; // radius of saturn in coordinate system\n    float radius2 = radius * radius;\n\n    if (posDotLightDir > 0.0 && dot(ringPos, ringPos) - posDotLightDir2 < radius2) {\n      return vec3(0.0);\n    }\n    return vec3(1.0);\n  }\n\n  vec3 lights() {\n    vec3 lightDirection = normalize(vWorldPosition - lightPos);\n    float c = 0.35 + max(0.0, dot(vNormal, lightDirection)) * 0.4;\n\n    return vec3(c);\n  }\n\n  void main() {\n    // NOTE: The order of multiplication matters here. color() may call\n    // discard, which would cause problems on some Windows graphics drivers if\n    // it is a left operand.\n    // https://github.com/typpo/spacekit/issues/22\n    gl_FragColor = vec4(lights() * shadow(), 1.0) * color();\n  }\n",
                      "cooked": "\n  uniform sampler2D ringTexture;\n  uniform float innerRadius;\n  uniform float outerRadius;\n  uniform vec3 lightPos;\n\n  varying vec3 vNormal;\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n\n  vec4 color() {\n    vec2 uv = vec2(0);\n    uv.x = (length(vPos) - innerRadius) / (outerRadius - innerRadius);\n    if (uv.x < 0.0 || uv.x > 1.0) {\n      discard;\n    }\n\n    vec4 pixel = texture2D(ringTexture, uv);\n    return pixel;\n  }\n\n  vec3 shadow() {\n    vec3 lightDir = normalize(vPos - lightPos);\n    vec3 planetPos = vec3(0);\n\n    vec3 ringPos = vPos - planetPos;\n    float posDotLightDir = dot(ringPos, lightDir);\n    float posDotLightDir2 = posDotLightDir * posDotLightDir;\n\n    // TODO(ian): Generalize this line.\n    float radius = 0.0389259903; // radius of saturn in coordinate system\n    float radius2 = radius * radius;\n\n    if (posDotLightDir > 0.0 && dot(ringPos, ringPos) - posDotLightDir2 < radius2) {\n      return vec3(0.0);\n    }\n    return vec3(1.0);\n  }\n\n  vec3 lights() {\n    vec3 lightDirection = normalize(vWorldPosition - lightPos);\n    float c = 0.35 + max(0.0, dot(vNormal, lightDirection)) * 0.4;\n\n    return vec3(c);\n  }\n\n  void main() {\n    // NOTE: The order of multiplication matters here. color() may call\n    // discard, which would cause problems on some Windows graphics drivers if\n    // it is a left operand.\n    // https://github.com/typpo/spacekit/issues/22\n    gl_FragColor = vec4(lights() * shadow(), 1.0) * color();\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 76,
      "end": 94,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 314,
      "end": 332,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
      "start": 7025,
      "end": 7144,
      "loc": {
        "start": {
          "line": 254,
          "column": 0
        },
        "end": {
          "line": 254,
          "column": 119
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "*",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 10,
        "updateContext": null
      },
      "value": "*",
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "as",
      "start": 9,
      "end": 11,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "THREE",
      "start": 12,
      "end": 17,
      "loc": {
        "start": {
          "line": 1,
          "column": 12
        },
        "end": {
          "line": 1,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 18,
      "end": 22,
      "loc": {
        "start": {
          "line": 1,
          "column": 18
        },
        "end": {
          "line": 1,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "three",
      "start": 23,
      "end": 30,
      "loc": {
        "start": {
          "line": 1,
          "column": 23
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 30,
      "end": 31,
      "loc": {
        "start": {
          "line": 1,
          "column": 30
        },
        "end": {
          "line": 1,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 33,
      "end": 39,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 40,
      "end": 41,
      "loc": {
        "start": {
          "line": 3,
          "column": 7
        },
        "end": {
          "line": 3,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getScaleFactor",
      "start": 42,
      "end": 56,
      "loc": {
        "start": {
          "line": 3,
          "column": 9
        },
        "end": {
          "line": 3,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 57,
      "end": 58,
      "loc": {
        "start": {
          "line": 3,
          "column": 24
        },
        "end": {
          "line": 3,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 59,
      "end": 63,
      "loc": {
        "start": {
          "line": 3,
          "column": 26
        },
        "end": {
          "line": 3,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./Scale",
      "start": 64,
      "end": 73,
      "loc": {
        "start": {
          "line": 3,
          "column": 31
        },
        "end": {
          "line": 3,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 73,
      "end": 74,
      "loc": {
        "start": {
          "line": 3,
          "column": 40
        },
        "end": {
          "line": 3,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 76,
      "end": 94,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 95,
      "end": 101,
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 102,
      "end": 110,
      "loc": {
        "start": {
          "line": 8,
          "column": 7
        },
        "end": {
          "line": 8,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getOrbitShaderFragment",
      "start": 111,
      "end": 133,
      "loc": {
        "start": {
          "line": 8,
          "column": 16
        },
        "end": {
          "line": 8,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 133,
      "end": 134,
      "loc": {
        "start": {
          "line": 8,
          "column": 38
        },
        "end": {
          "line": 8,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 134,
      "end": 135,
      "loc": {
        "start": {
          "line": 8,
          "column": 39
        },
        "end": {
          "line": 8,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 136,
      "end": 137,
      "loc": {
        "start": {
          "line": 8,
          "column": 41
        },
        "end": {
          "line": 8,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 140,
      "end": 146,
      "loc": {
        "start": {
          "line": 9,
          "column": 2
        },
        "end": {
          "line": 9,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 147,
      "end": 148,
      "loc": {
        "start": {
          "line": 9,
          "column": 9
        },
        "end": {
          "line": 9,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  ",
      "start": 148,
      "end": 308,
      "loc": {
        "start": {
          "line": 9,
          "column": 10
        },
        "end": {
          "line": 16,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 308,
      "end": 309,
      "loc": {
        "start": {
          "line": 16,
          "column": 2
        },
        "end": {
          "line": 16,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 309,
      "end": 310,
      "loc": {
        "start": {
          "line": 16,
          "column": 3
        },
        "end": {
          "line": 16,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 311,
      "end": 312,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 314,
      "end": 332,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 333,
      "end": 339,
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 340,
      "end": 348,
      "loc": {
        "start": {
          "line": 22,
          "column": 7
        },
        "end": {
          "line": 22,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getOrbitShaderVertex",
      "start": 349,
      "end": 369,
      "loc": {
        "start": {
          "line": 22,
          "column": 16
        },
        "end": {
          "line": 22,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 369,
      "end": 370,
      "loc": {
        "start": {
          "line": 22,
          "column": 36
        },
        "end": {
          "line": 22,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 370,
      "end": 371,
      "loc": {
        "start": {
          "line": 22,
          "column": 37
        },
        "end": {
          "line": 22,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 372,
      "end": 373,
      "loc": {
        "start": {
          "line": 22,
          "column": 39
        },
        "end": {
          "line": 22,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 376,
      "end": 382,
      "loc": {
        "start": {
          "line": 23,
          "column": 2
        },
        "end": {
          "line": 23,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 383,
      "end": 384,
      "loc": {
        "start": {
          "line": 23,
          "column": 9
        },
        "end": {
          "line": 23,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float wBar;\n    attribute float M;\n\n    // Perihelion distance\n    attribute float q;\n\n    // CPU-computed term for parabolic orbits\n    attribute float a0;\n\n    // COSH Function (Hyperbolic Cosine)\n    float cosh(float val) {\n      float tmp = exp(val);\n      float cosH = (tmp + 1.0 / tmp) / 2.0;\n      return cosH;\n    }\n\n    // TANH Function (Hyperbolic Tangent)\n    float tanh(float val) {\n      float tmp = exp(val);\n      float tanH = (tmp - 1.0 / tmp) / (tmp + 1.0 / tmp);\n      return tanH;\n    }\n\n    // SINH Function (Hyperbolic Sine)\n    float sinh(float val) {\n      float tmp = exp(val);\n      float sinH = (tmp - 1.0 / tmp) / 2.0;\n      return sinH;\n    }\n\n    // Cube root helper that assumes param is positive\n    float cbrt(float x) {\n      return exp(log(x) / 3.0);\n    }\n\n    vec3 getPosNearParabolic() {\n      // See https://stjarnhimlen.se/comp/ppcomp.html#17\n      float b = sqrt(1.0 + a0 * a0);\n      float W = cbrt(b + a0) - cbrt(b - a0);\n      float f = (1.0 - e) / (1.0 + e);\n\n      float a1 = 2.0 / 3.0 + (2.0 / 5.0) * W * W;\n      float a2 = 7.0 / 5.0 + (33.0 / 35.0) * W * W + (37.0 / 175.0) * pow(W, 4.0);\n      float a3 =\n        W * W * (432.0 / 175.0 + (956.0 / 1125.0) * W * W + (84.0 / 1575.0) * pow(W, 4.0));\n\n      float C = (W * W) / (1.0 + W * W);\n      float g = f * C * C;\n      float w = W * (1.0 + f * C * (a1 + a2 * g + a3 * g * g));\n\n      // True anomaly\n      float v = 2.0 * atan(w);\n      // Heliocentric distance\n      float r = (q * (1.0 + w * w)) / (1.0 + w * w * f);\n\n      // Compute heliocentric coords.\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPosHyperbolic() {\n      float F0 = M;\n      for (int count = 0; count < 100; count++) {\n        float F1 = (M + e * (F0 * cosh(F0) - sinh(F0))) / (e * cosh(F0) - 1.0);\n        float lastdiff = abs(F1 - F0);\n        F0 = F1;\n\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n      float F = F0;\n\n      float v = 2.0 * atan(sqrt((e + 1.0) / (e - 1.0))) * tanh(F / 2.0);\n      float r = ",
      "start": 384,
      "end": 2967,
      "loc": {
        "start": {
          "line": 23,
          "column": 10
        },
        "end": {
          "line": 113,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "${",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2967,
      "end": 2969,
      "loc": {
        "start": {
          "line": 113,
          "column": 16
        },
        "end": {
          "line": 113,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getScaleFactor",
      "start": 2969,
      "end": 2983,
      "loc": {
        "start": {
          "line": 113,
          "column": 18
        },
        "end": {
          "line": 113,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2983,
      "end": 2984,
      "loc": {
        "start": {
          "line": 113,
          "column": 32
        },
        "end": {
          "line": 113,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2984,
      "end": 2985,
      "loc": {
        "start": {
          "line": 113,
          "column": 33
        },
        "end": {
          "line": 113,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2985,
      "end": 2986,
      "loc": {
        "start": {
          "line": 113,
          "column": 34
        },
        "end": {
          "line": 113,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "toFixed",
      "start": 2986,
      "end": 2993,
      "loc": {
        "start": {
          "line": 113,
          "column": 35
        },
        "end": {
          "line": 113,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2993,
      "end": 2994,
      "loc": {
        "start": {
          "line": 113,
          "column": 42
        },
        "end": {
          "line": 113,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 3003,
      "end": 3004,
      "loc": {
        "start": {
          "line": 114,
          "column": 8
        },
        "end": {
          "line": 114,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3004,
      "end": 3005,
      "loc": {
        "start": {
          "line": 114,
          "column": 9
        },
        "end": {
          "line": 114,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3012,
      "end": 3013,
      "loc": {
        "start": {
          "line": 115,
          "column": 6
        },
        "end": {
          "line": 115,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3013,
      "end": 3014,
      "loc": {
        "start": {
          "line": 115,
          "column": 7
        },
        "end": {
          "line": 115,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": " * (a * (1.0 - e * e)) / (1.0 + e * cos(v));\n\n      // Compute heliocentric coords.\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPosEllipsoid() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n\n      for (int count = 0; count < 100; count++) {\n        E1 = M + e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+e)/(1.0-e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = ",
      "start": 3014,
      "end": 4140,
      "loc": {
        "start": {
          "line": 115,
          "column": 8
        },
        "end": {
          "line": 152,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "${",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4140,
      "end": 4142,
      "loc": {
        "start": {
          "line": 152,
          "column": 16
        },
        "end": {
          "line": 152,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getScaleFactor",
      "start": 4142,
      "end": 4156,
      "loc": {
        "start": {
          "line": 152,
          "column": 18
        },
        "end": {
          "line": 152,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4156,
      "end": 4157,
      "loc": {
        "start": {
          "line": 152,
          "column": 32
        },
        "end": {
          "line": 152,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4157,
      "end": 4158,
      "loc": {
        "start": {
          "line": 152,
          "column": 33
        },
        "end": {
          "line": 152,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4158,
      "end": 4159,
      "loc": {
        "start": {
          "line": 152,
          "column": 34
        },
        "end": {
          "line": 152,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "toFixed",
      "start": 4159,
      "end": 4166,
      "loc": {
        "start": {
          "line": 152,
          "column": 35
        },
        "end": {
          "line": 152,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4166,
      "end": 4167,
      "loc": {
        "start": {
          "line": 152,
          "column": 42
        },
        "end": {
          "line": 152,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 4176,
      "end": 4177,
      "loc": {
        "start": {
          "line": 153,
          "column": 8
        },
        "end": {
          "line": 153,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4177,
      "end": 4178,
      "loc": {
        "start": {
          "line": 153,
          "column": 9
        },
        "end": {
          "line": 153,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4185,
      "end": 4186,
      "loc": {
        "start": {
          "line": 154,
          "column": 6
        },
        "end": {
          "line": 154,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4186,
      "end": 4187,
      "loc": {
        "start": {
          "line": 154,
          "column": 7
        },
        "end": {
          "line": 154,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": " * a * (1.0 - e * e) / (1.0 + e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    vec3 getPos() {\n      if (e > 0.8 && e < 1.2) {\n        return getPosNearParabolic();\n      } else if (e > 1.2) {\n        return getPosHyperbolic();\n      }\n      return getPosEllipsoid();\n    }\n\n    void main() {\n      vColor = fuzzColor;\n\n      vec3 newpos = getPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  ",
      "start": 4187,
      "end": 5014,
      "loc": {
        "start": {
          "line": 154,
          "column": 8
        },
        "end": {
          "line": 180,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5014,
      "end": 5015,
      "loc": {
        "start": {
          "line": 180,
          "column": 2
        },
        "end": {
          "line": 180,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5015,
      "end": 5016,
      "loc": {
        "start": {
          "line": 180,
          "column": 3
        },
        "end": {
          "line": 180,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5017,
      "end": 5018,
      "loc": {
        "start": {
          "line": 181,
          "column": 0
        },
        "end": {
          "line": 181,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5020,
      "end": 5026,
      "loc": {
        "start": {
          "line": 183,
          "column": 0
        },
        "end": {
          "line": 183,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5027,
      "end": 5032,
      "loc": {
        "start": {
          "line": 183,
          "column": 7
        },
        "end": {
          "line": 183,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STAR_SHADER_FRAGMENT",
      "start": 5033,
      "end": 5053,
      "loc": {
        "start": {
          "line": 183,
          "column": 13
        },
        "end": {
          "line": 183,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5054,
      "end": 5055,
      "loc": {
        "start": {
          "line": 183,
          "column": 34
        },
        "end": {
          "line": 183,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5056,
      "end": 5057,
      "loc": {
        "start": {
          "line": 183,
          "column": 36
        },
        "end": {
          "line": 183,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n",
      "start": 5057,
      "end": 5214,
      "loc": {
        "start": {
          "line": 183,
          "column": 37
        },
        "end": {
          "line": 190,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5214,
      "end": 5215,
      "loc": {
        "start": {
          "line": 190,
          "column": 0
        },
        "end": {
          "line": 190,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5215,
      "end": 5216,
      "loc": {
        "start": {
          "line": 190,
          "column": 1
        },
        "end": {
          "line": 190,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5218,
      "end": 5224,
      "loc": {
        "start": {
          "line": 192,
          "column": 0
        },
        "end": {
          "line": 192,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5225,
      "end": 5230,
      "loc": {
        "start": {
          "line": 192,
          "column": 7
        },
        "end": {
          "line": 192,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STAR_SHADER_VERTEX",
      "start": 5231,
      "end": 5249,
      "loc": {
        "start": {
          "line": 192,
          "column": 13
        },
        "end": {
          "line": 192,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5250,
      "end": 5251,
      "loc": {
        "start": {
          "line": 192,
          "column": 32
        },
        "end": {
          "line": 192,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5252,
      "end": 5253,
      "loc": {
        "start": {
          "line": 192,
          "column": 34
        },
        "end": {
          "line": 192,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n",
      "start": 5253,
      "end": 5501,
      "loc": {
        "start": {
          "line": 192,
          "column": 35
        },
        "end": {
          "line": 202,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5501,
      "end": 5502,
      "loc": {
        "start": {
          "line": 202,
          "column": 0
        },
        "end": {
          "line": 202,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5502,
      "end": 5503,
      "loc": {
        "start": {
          "line": 202,
          "column": 1
        },
        "end": {
          "line": 202,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5505,
      "end": 5511,
      "loc": {
        "start": {
          "line": 204,
          "column": 0
        },
        "end": {
          "line": 204,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5512,
      "end": 5517,
      "loc": {
        "start": {
          "line": 204,
          "column": 7
        },
        "end": {
          "line": 204,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "GENERIC_PARTICLE_SHADER_VERTEX",
      "start": 5518,
      "end": 5548,
      "loc": {
        "start": {
          "line": 204,
          "column": 13
        },
        "end": {
          "line": 204,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5549,
      "end": 5550,
      "loc": {
        "start": {
          "line": 204,
          "column": 44
        },
        "end": {
          "line": 204,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5551,
      "end": 5552,
      "loc": {
        "start": {
          "line": 204,
          "column": 46
        },
        "end": {
          "line": 204,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n",
      "start": 5552,
      "end": 5855,
      "loc": {
        "start": {
          "line": 204,
          "column": 47
        },
        "end": {
          "line": 214,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5855,
      "end": 5856,
      "loc": {
        "start": {
          "line": 214,
          "column": 0
        },
        "end": {
          "line": 214,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5856,
      "end": 5857,
      "loc": {
        "start": {
          "line": 214,
          "column": 1
        },
        "end": {
          "line": 214,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5859,
      "end": 5865,
      "loc": {
        "start": {
          "line": 216,
          "column": 0
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5866,
      "end": 5871,
      "loc": {
        "start": {
          "line": 216,
          "column": 7
        },
        "end": {
          "line": 216,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "GENERIC_PARTICLE_SHADER_FRAGMENT",
      "start": 5872,
      "end": 5904,
      "loc": {
        "start": {
          "line": 216,
          "column": 13
        },
        "end": {
          "line": 216,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5905,
      "end": 5906,
      "loc": {
        "start": {
          "line": 216,
          "column": 46
        },
        "end": {
          "line": 216,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5907,
      "end": 5908,
      "loc": {
        "start": {
          "line": 216,
          "column": 48
        },
        "end": {
          "line": 216,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n",
      "start": 5908,
      "end": 6179,
      "loc": {
        "start": {
          "line": 216,
          "column": 49
        },
        "end": {
          "line": 225,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6179,
      "end": 6180,
      "loc": {
        "start": {
          "line": 225,
          "column": 0
        },
        "end": {
          "line": 225,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6180,
      "end": 6181,
      "loc": {
        "start": {
          "line": 225,
          "column": 1
        },
        "end": {
          "line": 225,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 6183,
      "end": 6189,
      "loc": {
        "start": {
          "line": 227,
          "column": 0
        },
        "end": {
          "line": 227,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 6190,
      "end": 6195,
      "loc": {
        "start": {
          "line": 227,
          "column": 7
        },
        "end": {
          "line": 227,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ATMOSPHERE_SHADER_VERTEX",
      "start": 6196,
      "end": 6220,
      "loc": {
        "start": {
          "line": 227,
          "column": 13
        },
        "end": {
          "line": 227,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 6221,
      "end": 6222,
      "loc": {
        "start": {
          "line": 227,
          "column": 38
        },
        "end": {
          "line": 227,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6223,
      "end": 6224,
      "loc": {
        "start": {
          "line": 227,
          "column": 40
        },
        "end": {
          "line": 227,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  //varying vec3 vNormal;\n\n  varying vec3 vViewLightPos;\n\n  void main() {\n    //vNormal = normalize(normalMatrix * normal);\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n    vUv = uv;\n    // Since the light is in camera coordinates,\n    // I'll need the vertex position in camera coords too\n    vecPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    // That's NOT exacly how you should transform your\n    // normals but this will work fine, since my model\n    // matrix is pretty basic\n    vecNormal = (modelViewMatrix * vec4(normal, 0.0)).xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    gl_Position = projectionMatrix * vec4(vecPos, 1.0);\n  }\n",
      "start": 6224,
      "end": 7021,
      "loc": {
        "start": {
          "line": 227,
          "column": 41
        },
        "end": {
          "line": 252,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7021,
      "end": 7022,
      "loc": {
        "start": {
          "line": 252,
          "column": 0
        },
        "end": {
          "line": 252,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7022,
      "end": 7023,
      "loc": {
        "start": {
          "line": 252,
          "column": 1
        },
        "end": {
          "line": 252,
          "column": 2
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
      "start": 7025,
      "end": 7144,
      "loc": {
        "start": {
          "line": 254,
          "column": 0
        },
        "end": {
          "line": 254,
          "column": 119
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 7145,
      "end": 7151,
      "loc": {
        "start": {
          "line": 255,
          "column": 0
        },
        "end": {
          "line": 255,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 7152,
      "end": 7157,
      "loc": {
        "start": {
          "line": 255,
          "column": 7
        },
        "end": {
          "line": 255,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ATMOSPHERE_SHADER_FRAGMENT",
      "start": 7158,
      "end": 7184,
      "loc": {
        "start": {
          "line": 255,
          "column": 13
        },
        "end": {
          "line": 255,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 7185,
      "end": 7186,
      "loc": {
        "start": {
          "line": 255,
          "column": 40
        },
        "end": {
          "line": 255,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7187,
      "end": 7188,
      "loc": {
        "start": {
          "line": 255,
          "column": 42
        },
        "end": {
          "line": 255,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform float c;\n  uniform float p;\n  uniform vec3 color;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  varying vec3  vViewLightPos;\n\n  void main() {\n    float intensity = pow(c - dot(vecNormal, vec3(0.0, 0.0, 1.0)), p);\n\n    vec4 addedLights = vec4(0.0, 0.0, 0.0, 1.0);\n    vec3 lightDirection = normalize(vecPos - vViewLightPos);\n    addedLights.rgb += clamp(dot(-lightDirection, vecNormal), 0.0, 1.0)\n                       * 1.0 /* intensity */;\n                       // * pointLights[i].color\n\n    gl_FragColor = vec4(color, 1.0) * intensity * addedLights;\n  }\n",
      "start": 7188,
      "end": 7784,
      "loc": {
        "start": {
          "line": 255,
          "column": 43
        },
        "end": {
          "line": 276,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7784,
      "end": 7785,
      "loc": {
        "start": {
          "line": 276,
          "column": 0
        },
        "end": {
          "line": 276,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7785,
      "end": 7786,
      "loc": {
        "start": {
          "line": 276,
          "column": 1
        },
        "end": {
          "line": 276,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 7788,
      "end": 7794,
      "loc": {
        "start": {
          "line": 278,
          "column": 0
        },
        "end": {
          "line": 278,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 7795,
      "end": 7800,
      "loc": {
        "start": {
          "line": 278,
          "column": 7
        },
        "end": {
          "line": 278,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SPHERE_SHADER_VERTEX",
      "start": 7801,
      "end": 7821,
      "loc": {
        "start": {
          "line": 278,
          "column": 13
        },
        "end": {
          "line": 278,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 7822,
      "end": 7823,
      "loc": {
        "start": {
          "line": 278,
          "column": 34
        },
        "end": {
          "line": 278,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7824,
      "end": 7825,
      "loc": {
        "start": {
          "line": 278,
          "column": 36
        },
        "end": {
          "line": 278,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n  varying vec3 vNormal;\n\n  void main() {\n    vUv = uv;\n    vec4 vViewPosition4 = modelViewMatrix * vec4(position, 1.0);\n    vViewPosition = vViewPosition4.xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    vNormal = normalMatrix * normal;\n\n    gl_Position = projectionMatrix * vViewPosition4;\n  }\n",
      "start": 7825,
      "end": 8247,
      "loc": {
        "start": {
          "line": 278,
          "column": 37
        },
        "end": {
          "line": 295,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8247,
      "end": 8248,
      "loc": {
        "start": {
          "line": 295,
          "column": 0
        },
        "end": {
          "line": 295,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8248,
      "end": 8249,
      "loc": {
        "start": {
          "line": 295,
          "column": 1
        },
        "end": {
          "line": 295,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 8251,
      "end": 8257,
      "loc": {
        "start": {
          "line": 297,
          "column": 0
        },
        "end": {
          "line": 297,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 8258,
      "end": 8263,
      "loc": {
        "start": {
          "line": 297,
          "column": 7
        },
        "end": {
          "line": 297,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SPHERE_SHADER_FRAGMENT",
      "start": 8264,
      "end": 8286,
      "loc": {
        "start": {
          "line": 297,
          "column": 13
        },
        "end": {
          "line": 297,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 8287,
      "end": 8288,
      "loc": {
        "start": {
          "line": 297,
          "column": 36
        },
        "end": {
          "line": 297,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8289,
      "end": 8290,
      "loc": {
        "start": {
          "line": 297,
          "column": 38
        },
        "end": {
          "line": 297,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform sampler2D sphereTexture;\n\n  varying vec2 vUv;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n\n  void main() {\n    vec3 normal = normalize(vNormal);\n    vec3 lightDir = normalize(vViewLightPos - vViewPosition);\n    float lambertian = max(dot(normal, lightDir), 0.0);\n    gl_FragColor = texture2D(sphereTexture, vUv) * vec4(vec3(1.0) * lambertian, 1.0);\n  }\n",
      "start": 8290,
      "end": 8694,
      "loc": {
        "start": {
          "line": 297,
          "column": 39
        },
        "end": {
          "line": 311,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8694,
      "end": 8695,
      "loc": {
        "start": {
          "line": 311,
          "column": 0
        },
        "end": {
          "line": 311,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8695,
      "end": 8696,
      "loc": {
        "start": {
          "line": 311,
          "column": 1
        },
        "end": {
          "line": 311,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 8698,
      "end": 8704,
      "loc": {
        "start": {
          "line": 313,
          "column": 0
        },
        "end": {
          "line": 313,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 8705,
      "end": 8710,
      "loc": {
        "start": {
          "line": 313,
          "column": 7
        },
        "end": {
          "line": 313,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "RING_SHADER_VERTEX",
      "start": 8711,
      "end": 8729,
      "loc": {
        "start": {
          "line": 313,
          "column": 13
        },
        "end": {
          "line": 313,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 8730,
      "end": 8731,
      "loc": {
        "start": {
          "line": 313,
          "column": 32
        },
        "end": {
          "line": 313,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8732,
      "end": 8733,
      "loc": {
        "start": {
          "line": 313,
          "column": 34
        },
        "end": {
          "line": 313,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n\n  void main() {\n    vPos = position;\n    vec4 worldPosition = (modelMatrix * vec4(position, 1.));\n    gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition.xyz, 1.);\n\n    vNormal = normalMatrix * normal;\n    vWorldPosition = worldPosition.xyz;\n  }\n",
      "start": 8733,
      "end": 9070,
      "loc": {
        "start": {
          "line": 313,
          "column": 35
        },
        "end": {
          "line": 326,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 9070,
      "end": 9071,
      "loc": {
        "start": {
          "line": 326,
          "column": 0
        },
        "end": {
          "line": 326,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 9071,
      "end": 9072,
      "loc": {
        "start": {
          "line": 326,
          "column": 1
        },
        "end": {
          "line": 326,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 9074,
      "end": 9080,
      "loc": {
        "start": {
          "line": 328,
          "column": 0
        },
        "end": {
          "line": 328,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 9081,
      "end": 9086,
      "loc": {
        "start": {
          "line": 328,
          "column": 7
        },
        "end": {
          "line": 328,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "RING_SHADER_FRAGMENT",
      "start": 9087,
      "end": 9107,
      "loc": {
        "start": {
          "line": 328,
          "column": 13
        },
        "end": {
          "line": 328,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 9108,
      "end": 9109,
      "loc": {
        "start": {
          "line": 328,
          "column": 34
        },
        "end": {
          "line": 328,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 9110,
      "end": 9111,
      "loc": {
        "start": {
          "line": 328,
          "column": 36
        },
        "end": {
          "line": 328,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform sampler2D ringTexture;\n  uniform float innerRadius;\n  uniform float outerRadius;\n  uniform vec3 lightPos;\n\n  varying vec3 vNormal;\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n\n  vec4 color() {\n    vec2 uv = vec2(0);\n    uv.x = (length(vPos) - innerRadius) / (outerRadius - innerRadius);\n    if (uv.x < 0.0 || uv.x > 1.0) {\n      discard;\n    }\n\n    vec4 pixel = texture2D(ringTexture, uv);\n    return pixel;\n  }\n\n  vec3 shadow() {\n    vec3 lightDir = normalize(vPos - lightPos);\n    vec3 planetPos = vec3(0);\n\n    vec3 ringPos = vPos - planetPos;\n    float posDotLightDir = dot(ringPos, lightDir);\n    float posDotLightDir2 = posDotLightDir * posDotLightDir;\n\n    // TODO(ian): Generalize this line.\n    float radius = 0.0389259903; // radius of saturn in coordinate system\n    float radius2 = radius * radius;\n\n    if (posDotLightDir > 0.0 && dot(ringPos, ringPos) - posDotLightDir2 < radius2) {\n      return vec3(0.0);\n    }\n    return vec3(1.0);\n  }\n\n  vec3 lights() {\n    vec3 lightDirection = normalize(vWorldPosition - lightPos);\n    float c = 0.35 + max(0.0, dot(vNormal, lightDirection)) * 0.4;\n\n    return vec3(c);\n  }\n\n  void main() {\n    // NOTE: The order of multiplication matters here. color() may call\n    // discard, which would cause problems on some Windows graphics drivers if\n    // it is a left operand.\n    // https://github.com/typpo/spacekit/issues/22\n    gl_FragColor = vec4(lights() * shadow(), 1.0) * color();\n  }\n",
      "start": 9111,
      "end": 10571,
      "loc": {
        "start": {
          "line": 328,
          "column": 37
        },
        "end": {
          "line": 381,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10571,
      "end": 10572,
      "loc": {
        "start": {
          "line": 381,
          "column": 0
        },
        "end": {
          "line": 381,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10572,
      "end": 10573,
      "loc": {
        "start": {
          "line": 381,
          "column": 1
        },
        "end": {
          "line": 381,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10574,
      "end": 10574,
      "loc": {
        "start": {
          "line": 382,
          "column": 0
        },
        "end": {
          "line": 382,
          "column": 0
        }
      }
    }
  ]
}